Question	Answer	Source	Metadata	SuggestedQuestions	IsContextOnly	Prompts	QnaId
¿Cómo se hace un bot?	El ciclo de vida de un bot comienza con el diseño del mismo. Tras ello comenzaremos a desarrollar y testear. Cuando consigamos un bot funcional podremos publicarlo en Azure y conectarlo a distintos canales. Así podrán acceder a él los usuarios finales. Analiza los resultados y ¡vuelta a empezar!	Editorial		[]	false	[{"displayOrder":0,"qnaId":8,"displayText":"Diseño"},{"displayOrder":0,"qnaId":9,"displayText":"Desarrollo"},{"displayOrder":0,"qnaId":13,"displayText":"Pruebas"},{"displayOrder":0,"qnaId":14,"displayText":"Publicación"},{"displayOrder":0,"qnaId":15,"displayText":"Conectarlo a Canales"},{"displayOrder":0,"qnaId":16,"displayText":"Evaluación"}]	7
¿cómo diseño un bot?	Diseñar una buena experiencia de usuario debe ser la mayor prioridad a la hora de diseñar un bot.\n\n* ¿Es capaz de resolver el problema en el menor número de pasos?\n\n* ¿Resuelve el problema más fácilmente que cualquier otra alternativa?\n\n* ¿Está publicado en los canales adecuados?\n\n* ¿Es intuitivo?	Editorial		[]	false	[]	8
Desarrollo	Podremos desarrollar el bot con diferentes lenguajes de programación, actualmente en G.A. con .Net o Node.js. Para humanizar nuesto bot, recomendamos encarecidamente el uso de cognitive services.	Editorial		[]	false	[{"displayOrder":0,"qnaId":10,"displayText":"Ejemplos de .NET Core"},{"displayOrder":0,"qnaId":11,"displayText":"Ejemplos de Node.js"},{"displayOrder":0,"qnaId":12,"displayText":"Cognitive Services"}]	9
Ayúdame a desarrollar el bot	Podremos desarrollar el bot con diferentes lenguajes de programación, actualmente en G.A. con .Net o Node.js. Para humanizar nuesto bot, recomendamos encarecidamente el uso de cognitive services.	Editorial		[]	false	[{"displayOrder":0,"qnaId":10,"displayText":"Ejemplos de .NET Core"},{"displayOrder":0,"qnaId":11,"displayText":"Ejemplos de Node.js"},{"displayOrder":0,"qnaId":12,"displayText":"Cognitive Services"}]	9
Pero el dame el código	Podremos desarrollar el bot con diferentes lenguajes de programación, actualmente en G.A. con .Net o Node.js. Para humanizar nuesto bot, recomendamos encarecidamente el uso de cognitive services.	Editorial		[]	false	[{"displayOrder":0,"qnaId":10,"displayText":"Ejemplos de .NET Core"},{"displayOrder":0,"qnaId":11,"displayText":"Ejemplos de Node.js"},{"displayOrder":0,"qnaId":12,"displayText":"Cognitive Services"}]	9
programación, por favor	Podremos desarrollar el bot con diferentes lenguajes de programación, actualmente en G.A. con .Net o Node.js. Para humanizar nuesto bot, recomendamos encarecidamente el uso de cognitive services.	Editorial		[]	false	[{"displayOrder":0,"qnaId":10,"displayText":"Ejemplos de .NET Core"},{"displayOrder":0,"qnaId":11,"displayText":"Ejemplos de Node.js"},{"displayOrder":0,"qnaId":12,"displayText":"Cognitive Services"}]	9
Ejemplos de .NET Core	https://github.com/Microsoft/BotBuilder-Samples/tree/master/samples/csharp_dotnetcore	Editorial		[]	true	[]	10
Ejemplos de Node.js	https://github.com/Microsoft/BotBuilder-Samples/tree/master/samples/javascript_nodejs	Editorial		[]	true	[]	11
Cognitive Services	Sobre cognitive services hay mucho que contar, ¡echa un ojo! https://azure.microsoft.com/en-us/services/cognitive-services/	Editorial		[]	false	[]	12
¿Cómo humanizar mi bot?	Sobre cognitive services hay mucho que contar, ¡echa un ojo! https://azure.microsoft.com/en-us/services/cognitive-services/	Editorial		[]	false	[]	12
Pruebas	Puedes descargar el Bot Framework Emulator para probarlo; o crear un tunel con NGROK desde Azure a tu local	Editorial		[]	true	[]	13
Publicación	En este artículo podrás ver cómo desplegar tu bot en Azure: https://docs.microsoft.com/en-us/azure/bot-service/bot-builder-deploy-az-cli?view=azure-bot-service-4.0&tabs=newrg	Editorial		[]	true	[]	14
Conectarlo a Canales	Crear bot channels registration > publicarlo en teams	Editorial		[]	true	[]	15
Evalúalo	Usa bot analytics para evaluar el impacto de tu bot. https://docs.microsoft.com/en-us/azure/bot-service/bot-service-manage-analytics?view=azure-bot-service-4.0	Editorial		[]	true	[]	16